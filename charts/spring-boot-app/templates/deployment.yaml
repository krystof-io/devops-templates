apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-boot-app.fullname" . }}
  namespace: {{ .Release.Namespace }}  
  labels:
    {{- include "spring-boot-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spring-boot-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "spring-boot-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spring-boot-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.opentelemetry.enabled }}
      initContainers:
      - name: copy-otel-agent
        image: {{ .Values.opentelemetry.initContainer.image }}
        command: ['sh', '-c']
        args:
          - |
            echo "Copying OpenTelemetry Java agent v{{ .Values.opentelemetry.agentVersion }}..."
            cp /utilities/otel-agents/opentelemetry-javaagent-{{ .Values.opentelemetry.agentVersion }}.jar /otel/opentelemetry-javaagent.jar
            echo "Copy completed successfully"
        volumeMounts:
        - name: otel-agent
          mountPath: /otel
        resources:
          {{- toYaml .Values.opentelemetry.initContainer.resources | nindent 12 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        {{- if and .Values.springBoot.management.enabled (ne .Values.springBoot.management.port .Values.service.targetPort) }}
        - name: management
          containerPort: {{ .Values.springBoot.management.port }}
          protocol: TCP
        {{- end }}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Values.springBoot.profiles.active | quote }}
        {{- if .Values.springBoot.management.enabled }}
        - name: MANAGEMENT_SERVER_PORT
          value: {{ .Values.springBoot.management.port | quote }}
        {{- end }}
        {{- $javaToolOptions := list }}
        {{- if .Values.springBoot.jvm.containerDefaults.enabled }}
          {{- $javaToolOptions = append $javaToolOptions (printf "-XX:MaxRAMPercentage=%s" .Values.springBoot.jvm.containerDefaults.maxRAMPercentage) }}
          {{- if .Values.springBoot.jvm.containerDefaults.useG1GC }}
            {{- $javaToolOptions = append $javaToolOptions "-XX:+UseG1GC" }}
          {{- end }}
          {{- if .Values.springBoot.jvm.containerDefaults.useStringDeduplication }}
            {{- $javaToolOptions = append $javaToolOptions "-XX:+UseStringDeduplication" }}
          {{- end }}
        {{- end }}
        {{- if .Values.springBoot.jvm.tmpdir }}
          {{- $javaToolOptions = append $javaToolOptions (printf "-Djava.io.tmpdir=%s" .Values.springBoot.jvm.tmpdir) }}
        {{- end }}
        {{- if .Values.springBoot.jvm.additionalOpts }}
          {{- $javaToolOptions = append $javaToolOptions .Values.springBoot.jvm.additionalOpts }}
        {{- end }}
        {{- if .Values.opentelemetry.enabled }}
          {{- $javaToolOptions = append $javaToolOptions "-javaagent:/otel/opentelemetry-javaagent.jar" }}
        {{- end }}
        {{- if $javaToolOptions }}
        - name: JAVA_TOOL_OPTIONS
          value: {{ join " " $javaToolOptions | quote }}
        {{- end }}
        {{- if .Values.springBoot.jvm.fullOpts }}
        - name: JAVA_OPTS
          value: {{ .Values.springBoot.jvm.fullOpts | quote }}
        {{- end }}
        {{- if .Values.opentelemetry.enabled }}
        - name: OTEL_SERVICE_NAME
          value: {{ .Values.opentelemetry.serviceName | default (include "spring-boot-app.fullname" .) | quote }}
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: {{ .Values.opentelemetry.endpoint | quote }}
        - name: OTEL_EXPORTER_OTLP_PROTOCOL
          value: {{ .Values.opentelemetry.config.otlpProtocol | quote }}
        {{- if .Values.opentelemetry.config.resourceAttributes }}
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: {{ .Values.opentelemetry.config.resourceAttributes | quote }}
        {{- end }}
        - name: OTEL_TRACES_SAMPLER
          value: {{ .Values.opentelemetry.config.traceSampler | quote }}
        - name: OTEL_TRACES_SAMPLER_ARG
          value: {{ .Values.opentelemetry.config.traceSamplerArg | quote }}
        - name: OTEL_METRICS_EXPORTER
          value: {{ .Values.opentelemetry.config.metricsExporter | quote }}
        - name: OTEL_LOGS_EXPORTER
          value: {{ .Values.opentelemetry.config.logsExporter | quote }}
        {{- range $key, $value := .Values.opentelemetry.config.instrumentationConfig }}
        - name: {{ printf "OTEL_INSTRUMENTATION_%s" ($key | upper) }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.envFrom }}
        envFrom:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.springBoot.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.springBoot.livenessProbe.path }}
            port: {{ .Values.springBoot.management.enabled | ternary .Values.springBoot.management.port .Values.service.targetPort }}
          initialDelaySeconds: {{ .Values.springBoot.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.springBoot.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.springBoot.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.springBoot.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.springBoot.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.springBoot.readinessProbe.path }}
            port: {{ .Values.springBoot.management.enabled | ternary .Values.springBoot.management.port .Values.service.targetPort }}
          initialDelaySeconds: {{ .Values.springBoot.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.springBoot.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.springBoot.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.springBoot.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.springBoot.startupProbe.enabled }}
        startupProbe:
          httpGet:
            path: {{ .Values.springBoot.startupProbe.path }}
            port: {{ .Values.springBoot.management.enabled | ternary .Values.springBoot.management.port .Values.service.targetPort }}
          initialDelaySeconds: {{ .Values.springBoot.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.springBoot.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.springBoot.startupProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.springBoot.startupProbe.failureThreshold }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- $needsVolumeMounts := or .Values.volumeMounts .Values.securityContext.readOnlyRootFilesystem .Values.opentelemetry.enabled .Values.persistence.data.enabled .Values.persistence.logs.enabled .Values.persistence.work.enabled }}
        {{- if $needsVolumeMounts }}
        volumeMounts:
        {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.opentelemetry.enabled }}
        - name: otel-agent
          mountPath: /otel
          readOnly: true
        {{- end }}
        {{- range $name, $config := .Values.persistence }}
        {{- if $config.enabled }}
        - name: {{ $name }}-storage
          mountPath: {{ $config.mountPath }}
        {{- end }}
        {{- end }}
        {{- if .Values.securityContext.readOnlyRootFilesystem }}
        - name: tmp
          mountPath: /tmp
        {{- end }}
        {{- end }}
      {{- $needsVolumes := or .Values.volumes .Values.securityContext.readOnlyRootFilesystem .Values.opentelemetry.enabled .Values.persistence.data.enabled .Values.persistence.logs.enabled .Values.persistence.work.enabled }}
      {{- if $needsVolumes }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.opentelemetry.enabled }}
      - name: otel-agent
        emptyDir: {}
      {{- end }}
      {{- range $name, $config := .Values.persistence }}
      {{- if $config.enabled }}
      - name: {{ $name }}-storage
        {{- if and (eq $name "work") (eq $config.type "emptyDir") }}
        emptyDir: {}
        {{- else if $config.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ $config.existingClaim }}
        {{- else }}
        persistentVolumeClaim:
          claimName: {{ include "spring-boot-app.fullname" $ }}-{{ $name }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.securityContext.readOnlyRootFilesystem }}
      - name: tmp
        emptyDir: {}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}